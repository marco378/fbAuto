/**
 * Facebook Job Automation Bookmarklet (Minified)
 * 
 * This is the compact version to be used as a browser bookmarklet.
 * Copy the javascript: URL below and save it as a bookmark.
 */

// BOOKMARKLET CODE (copy this entire javascript: URL):

javascript:(function(){const CONFIG={apiBaseUrl:'https://fbauto-production-4368.up.railway.app/api',authToken:localStorage.getItem('fb_auto_token')||prompt('Enter your auth token:'),delayBetweenPosts:5000,maxRetries:3};if(CONFIG.authToken&&!localStorage.getItem('fb_auto_token')){localStorage.setItem('fb_auto_token',CONFIG.authToken);}const sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));const log=(message,type='info')=>{const prefix=type==='error'?'‚ùå':type==='success'?'‚úÖ':'‚ÑπÔ∏è';console.log(`${prefix} FB Auto: ${message}`);};const showProgress=(message,progress=null)=>{const progressText=progress?` (${progress})`:'';document.title=`FB Auto: ${message}${progressText}`;log(message+progressText);};const apiCall=async(endpoint,options={})=>{const url=`${CONFIG.apiBaseUrl}${endpoint}`;const headers={'Content-Type':'application/json','Authorization':`Bearer ${CONFIG.authToken}`,...options.headers};try{const response=await fetch(url,{...options,headers});if(!response.ok){if(response.status===401){localStorage.removeItem('fb_auto_token');throw new Error('Authentication failed. Please refresh and enter your token again.');}throw new Error(`API Error: ${response.status} ${response.statusText}`);}return await response.json();}catch(error){log(`API call failed: ${error.message}`,'error');throw error;}};const fetchPendingJobs=async()=>{const data=await apiCall('/jobs/client-automation');return data.jobs||[];};const updateJobStatus=async(jobId,groupName,status,postUrl=null,error=null)=>{await apiCall(`/jobs/${jobId}/update-posting-status`,{method:'POST',body:JSON.stringify({facebookGroup:groupName,status,postUrl,error})});};const findPostButton=()=>{const selectors=['[data-testid="react-composer-post-button"]','[aria-label="Post"]','div[role="button"]','[data-testid="post-button"]','button'];for(const selector of selectors){const button=document.querySelector(selector);if(button&&button.textContent.toLowerCase().includes('post')){return button;}}return null;};const findTextarea=()=>{const selectors=['[data-testid="status-attachment-mentions-input"]','[data-testid="react-composer-root"] textarea','div[role="textbox"]','[contenteditable="true"]','textarea[placeholder*="mind"]','div[data-testid="status-attachment-mentions-input"]'];for(const selector of selectors){const element=document.querySelector(selector);if(element)return element;}return null;};const formatJobPost=job=>{const post=[];post.push(`üî• ${job.title} - ${job.company}`);post.push('');post.push(`üìç Location: ${job.location}`);post.push(`üíº Type: ${job.jobType}`);if(job.salaryRange){post.push(`üí∞ Salary: ${job.salaryRange}`);}post.push('');post.push('üìã Description:');post.push(job.description);if(job.requirements&&job.requirements.length>0){post.push('');post.push('‚úÖ Requirements:');job.requirements.forEach(req=>post.push(`‚Ä¢ ${req}`));}if(job.responsibilities&&job.responsibilities.length>0){post.push('');post.push('üéØ Responsibilities:');job.responsibilities.forEach(resp=>post.push(`‚Ä¢ ${resp}`));}if(job.perks){post.push('');post.push(`üéÅ Perks: ${job.perks}`);}post.push('');post.push('üí¨ Interested? Comment below or DM me!');post.push('#hiring #jobs #opportunity');return post.join('\n');};const postToGroup=async(job,groupName)=>{try{showProgress(`Posting to ${groupName}...`);if(!window.location.hostname.includes('facebook.com')){throw new Error('Please run this on Facebook.com');}const textarea=findTextarea();if(!textarea){throw new Error('Could not find Facebook post text area. Please click on "What\'s on your mind?" first.');}const postContent=formatJobPost(job);textarea.focus();if(textarea.tagName==='TEXTAREA'){textarea.value=postContent;textarea.dispatchEvent(new Event('input',{bubbles:true}));}else{textarea.textContent=postContent;textarea.dispatchEvent(new Event('input',{bubbles:true}));}await sleep(2000);const postButton=findPostButton();if(!postButton){throw new Error('Could not find Post button. Please post manually and press OK when done.');}const userConfirmed=confirm(`Ready to post job "${job.title}" to group "${groupName}"?\n\nClick OK to post, or Cancel to skip this group.`);if(!userConfirmed){throw new Error('User cancelled posting');}postButton.click();await sleep(3000);const currentUrl=window.location.href;log(`Successfully posted to ${groupName}`,'success');return{success:true,url:currentUrl};}catch(error){log(`Failed to post to ${groupName}: ${error.message}`,'error');return{success:false,error:error.message};}};const processJobs=async jobs=>{let totalPosts=0;let successfulPosts=0;let failedPosts=0;for(const job of jobs){showProgress(`Processing job: ${job.title}`,`${jobs.indexOf(job)+1}/${jobs.length}`);for(const groupName of job.pendingGroups){totalPosts++;const result=await postToGroup(job,groupName);try{if(result.success){await updateJobStatus(job.id,groupName,'SUCCESS',result.url);successfulPosts++;}else{await updateJobStatus(job.id,groupName,'FAILED',null,result.error);failedPosts++;}}catch(apiError){log(`Failed to update status for ${groupName}: ${apiError.message}`,'error');}if(totalPosts<jobs.reduce((acc,j)=>acc+j.pendingGroups.length,0)){showProgress(`Waiting ${CONFIG.delayBetweenPosts/1000}s before next post...`);await sleep(CONFIG.delayBetweenPosts);}}}return{totalPosts,successfulPosts,failedPosts};};const runAutomation=async()=>{try{if(!CONFIG.authToken){alert('No auth token provided. Please refresh and enter your token.');return;}showProgress('Fetching pending jobs...');const jobs=await fetchPendingJobs();if(jobs.length===0){showProgress('No pending jobs found');alert('‚úÖ All jobs are up to date! No posting needed.');return;}const totalGroups=jobs.reduce((acc,job)=>acc+job.pendingGroups.length,0);const proceed=confirm(`Found ${jobs.length} jobs with ${totalGroups} pending group posts.\n\nJobs to process:\n${jobs.map(j=>`‚Ä¢ ${j.title} (${j.pendingGroups.length} groups)`).join('\n')}\n\nClick OK to start automation, or Cancel to stop.`);if(!proceed){showProgress('Automation cancelled by user');return;}showProgress('Starting automation...');const results=await processJobs(jobs);const summary=`\nAutomation Complete! üìä\n\n‚úÖ Successful: ${results.successfulPosts}\n‚ùå Failed: ${results.failedPosts}\nüìä Total: ${results.totalPosts}\n\nSuccess Rate: ${((results.successfulPosts/results.totalPosts)*100).toFixed(1)}%\n`.trim();showProgress('Automation completed');alert(summary);log(summary.replace(/\n/g,' | '));}catch(error){const errorMsg=`Automation failed: ${error.message}`;showProgress(errorMsg);alert(`‚ùå ${errorMsg}`);log(errorMsg,'error');}};log('Facebook Job Automation Bookmarklet loaded');runAutomation();})();

// INSTALLATION INSTRUCTIONS:
// 1. Copy the entire javascript: URL above (from "javascript:" to the final semicolon)
// 2. Create a new bookmark in your browser
// 3. Paste the code as the URL
// 4. Name it "FB Auto Job Poster"
// 5. Navigate to facebook.com and click the bookmark to run automation